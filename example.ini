[Input Params]

# Note this is just an example ini file used on Glamdring - file paths would need to be modified accordingly.

# The model class being used, defined in pol_sky_model.py, and the model name being used (one of the model class methods).
model_class_name = pol_sky_model.Hierarchical_Pol_Models
model_name = synch_mbb_QU

# The frequencies (in GHz) of the maps you are using in your component separation. These should be the band averaged, central frequencies.
frequencies = [5.0, 40.0, 50.0, 60.0, 68.0, 78.0, 89.0, 100.0, 119.0, 140.0, 166.0, 195.0, 235.0, 280.0, 337.0, 402.0]

# The map files, as an ordered list, i.e. in same order as the frequency list.
map_files = ["/users/grumitt/CBASS/sim_sky/PySM_public/r_forecasts/cbass/cbass_noise1_nu0005p00GHz_total_nside0064.fits",
	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0040p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0050p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0060p00GHz_total_nside0064.fits",
	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0068p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0078p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0089p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0100p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0119p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0140p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0166p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0195p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0235p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0280p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0337p00GHz_total_nside0064.fits",
 	     "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_noise1_nu0402p00GHz_total_nside0064.fits"]

# The cov files, as an ordered list, i.e. in same order as the frequency list.
cov_files = ["/users/grumitt/CBASS/sim_sky/PySM_public/r_forecasts/cbass/cbass_nu0005p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0040p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0050p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0060p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0068p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0078p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0089p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0100p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0119p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0140p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0166p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0195p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0235p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0280p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0337p00GHz_cov_nside0064.fits",
             "/mnt/elephant/grumitt/sim_sky/PySM_public/r_forecasts/litebird/litebird_nu0402p00GHz_cov_nside0064.fits"]

# Mask file for the component separation - 0's for masked pixels, 1's for un-masked pixels.
mask_file = ./masks/mask_15sigma_CMB_threshold.fits

# Common resolution of the maps in degrees.
fwhm = 1.16666666667

# Whether to smooth the initial parameter maps.
smooth_init = False

regions_file = ./regions/clustering/regions_cbass_LiteBIRD_meanshift_10_0pt30_0p50_nside64.fits

synch_nu0 = 5.0
dust_nu0 = 402.0
ame_nu0 = 40.0

[Output Params]

# Output parameters for the trace.
num_burn = 0
num_thin = 1
save_trace = False
trace_out_dir = ./trace_output/cbass_litebird_synch0_mbb_nside64/joint_QU/region{}
trace_summary_dir = ./trace_summary/cbass_litebird_synch0_mbb_nside64/hierarchical/joint_QU/
trace_out_prefix = cbass_litebird_synch0_mbb

[Sampling Params]

# The core sampling parameter - number of samples, number of tuning steps and the target acceptance probability. 
nsamples = 5000
ntune = 1000
accept_prob = 0.98

# Set this to True if you want to use ADVI initialisation. This will override the starting values below.
# For pixel-by-pixel runs I recommend setting this to False and using mass matrix initilisation.
advi = False

# Some extra sampling parameters - do you want to display a progressbar and do you want to discard tuning steps?
# Note, discarding tuning steps doesn't seem to work when saving traces. Bear this in mind when loading them back in.
progressbar = True
discard_tuned_samples = True

[Starting Values]

# These parameter starting values are read in to a dictionary, which is passed to the sampler.
# The sampler will only take the starting values for variables you are actually sampling so don't
# worry about extra parameters here. These are just all the parameters you could sample. Set the 
# starting values for the parameters you are sampling, and leave the rest as is.

# For full sky component separation, these starting values should be specified in a healpix map.
# We take these pixel values as our starting values e.g. you may want to use COMMANDER/PySM estimates
# of parameter values as your starting values. This offers the best solution to avoiding bad 
# initialization in certain parts of the sky. This tends to be the main bottleneck for NUTS, so
# allowing varying starting values offers significant performance improvements.

# Synchrotron
init_synch_amp = ./initial_parameters/synch_amp_nside_64_5GHz.fits
init_synch_beta = ./initial_parameters/synch_beta_nside_64.fits
init_synch_curve = ./initial_parameters/synch_curve_nside_64.fits

# Thermal Dust
init_dust_amp = ./initial_parameters/dust_amp_nside_64_402GHz.fits
init_dust_beta = ./initial_parameters/dust_beta_nside_64.fits
init_dust_T = ./initial_parameters/dust_temp_nside_64.fits

# AME
init_ame_amp = ./initial_parameters/ame_amp_nside_64_23GHz.fits
init_ame_nup = ./initial_parameters/ame_nu_peak_0_nside_64.fits

# CMB
init_cmb_amp = ./initial_parameters/cmb_amp_nside_64.fits

# Free-free (we're focusing on polarization, but this option is here in case you are in a mood for I).
init_ff_EM = ./initial_parameters/freefree_amp_nside_64_30GHz.fits

[Priors]

# Change these to set the mean and scale parameters for the model priors.

# Standard Jeffreys-Gaussian model priors
jfg_synch_beta_ref = -3.0
jfg_synch_beta_sd = 0.1
jfg_synch_curve_ref = 0.0
jfg_synch_curve_sd = 0.1
jfg_dust_beta_ref = 1.6
jfg_dust_beta_sd = 0.3
jfg_dust_T_ref = 19.4
jfg_dust_T_sd = 1.5
jfg_ame_peak_nu_ref = 22.8
jfg_ame_peak_nu_sd = 1.0

# Hierarchical model priors.
hrl_synch_beta_ref = -3.0
hrl_synch_beta_sd = 0.3
hrl_synch_beta_sigma_ref = 0.35 
hrl_synch_curve_ref = 0.0
hrl_synch_curve_sd = 0.1
hrl_synch_curve_sigma_ref = 0.5
hrl_dust_beta_ref = 1.6
hrl_dust_beta_sd = 0.3
hrl_dust_beta_sigma_ref = 0.35
hrl_dust_T_ref = 21.0
hrl_dust_T_sd = 2.0
hrl_dust_T_sigma_ref = 2.5 
hrl_ame_peak_nu_ref = 22.8
hrl_ame_peak_nu_sd = 1.0
hrl_ame_peak_nu_sigma_ref = 1.0